[{"/home/johne/MyGitHub/cadastro_de_clients_react/src/index.js":"1","/home/johne/MyGitHub/cadastro_de_clients_react/src/App.js":"2","/home/johne/MyGitHub/cadastro_de_clients_react/src/reportWebVitals.js":"3","/home/johne/MyGitHub/cadastro_de_clients_react/src/Pages/ClientList.js":"4","/home/johne/MyGitHub/cadastro_de_clients_react/src/services/fetchClients.js":"5","/home/johne/MyGitHub/cadastro_de_clients_react/src/components/clientLi.js":"6","/home/johne/MyGitHub/cadastro_de_clients_react/src/Pages/ClientHome.js":"7","/home/johne/MyGitHub/cadastro_de_clients_react/src/components/AddressItem.js":"8","/home/johne/MyGitHub/cadastro_de_clients_react/src/Pages/NewClient.js":"9","/home/johne/MyGitHub/cadastro_de_clients_react/src/services/Post.js":"10"},{"size":500,"mtime":1625751161741,"results":"11","hashOfConfig":"12"},{"size":651,"mtime":1625890646048,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1625751161741,"results":"14","hashOfConfig":"12"},{"size":2854,"mtime":1625922592187,"results":"15","hashOfConfig":"12"},{"size":844,"mtime":1625880620026,"results":"16","hashOfConfig":"12"},{"size":273,"mtime":1625922291584,"results":"17","hashOfConfig":"12"},{"size":1456,"mtime":1625884352877,"results":"18","hashOfConfig":"12"},{"size":763,"mtime":1625882242667,"results":"19","hashOfConfig":"12"},{"size":3734,"mtime":1625895100399,"results":"20","hashOfConfig":"12"},{"size":580,"mtime":1625921985407,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"skpa8k",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/johne/MyGitHub/cadastro_de_clients_react/src/index.js",[],["45","46"],"/home/johne/MyGitHub/cadastro_de_clients_react/src/App.js",[],"/home/johne/MyGitHub/cadastro_de_clients_react/src/reportWebVitals.js",[],"/home/johne/MyGitHub/cadastro_de_clients_react/src/Pages/ClientList.js",[],"/home/johne/MyGitHub/cadastro_de_clients_react/src/services/fetchClients.js",[],"/home/johne/MyGitHub/cadastro_de_clients_react/src/components/clientLi.js",[],"/home/johne/MyGitHub/cadastro_de_clients_react/src/Pages/ClientHome.js",["47"],"import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport { getClientAddressById, getClientById } from '../services/fetchClients';\nimport '../css/ClientHome.css';\nimport AddressItem from '../components/AddressItem';\nimport Button from 'react-bootstrap/Button';\n\nfunction ClientHome({ match: { params: { clientId } } }) {\n  const [client, setClient] = useState([]);\n  const [address, setAddress] = useState([]);\n\n  useEffect(() => {\n    getClientById(clientId).then((response) => setClient(response))\n    getClientAddressById(clientId).then((response) => setAddress(response.address))\n  }, []);\n\n  return (\n    <div className=\"client-container\">\n      <header>\n        <div>\n          <h4>{ client.name }</h4>\n          <p>idade: {moment().diff(client.birth_date, 'years')} </p>\n        </div>\n        <div>\n          <p>CPF/CNPJ: { client.cpf_cnpj }</p>\n          <p>cadastrado em: <Moment format=\"DD/MM/YYYY\">{client.register}</Moment></p>\n        </div>\n      </header>\n      <hr/>\n      <section>\n        <h6>Endereços cadastrados</h6>\n        <Button size=\"sm\">\n          Novo endereço\n        </Button>\n      </section>\n      <hr/>\n      <section className=\"address-list-container\">\n        { (address) && address\n          .map((add, index) => <AddressItem add={ add } key={`key-${index}`} />) }\n      </section>\n    </div>\n  )\n}\n\nexport default ClientHome\n","/home/johne/MyGitHub/cadastro_de_clients_react/src/components/AddressItem.js",[],"/home/johne/MyGitHub/cadastro_de_clients_react/src/Pages/NewClient.js",["48"],"import React, { useState } from 'react';\nimport { Form, Row } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport '../css/NewClient.css';\nimport { addClientPost } from '../services/Post';\n\nfunction NewClient() {\n  const [name, setName] = useState('');\n  const [birthDate, setBirthDate] = useState('');\n  const [document, setDocument] = useState('')\n  const [entity, setEntity] = useState('')\n\n  const handleName = ({ target: { value } }) => { setName(value) }\n  const handleBirthDate = ({ target: { value } }) => { setBirthDate(value) }\n  const handleDocument = ({ target: { value } }) => { setDocument(value) }\n  const handleEntity = ({ target: { value } }) => { setEntity(value) }\n\n  const submit = () => {\n    addClientPost({ name, birthDate, document, entity })\n  }\n\n  return (\n    <Form className=\"new-client-container\">\n        <h4>Dados para entrega</h4>\n        <Form.Group className=\"mb-1\">\n          <Form.Label htmlFor=\"checkout-fullname\">\n            Nome completo: \n          </Form.Label>\n          <Form.Control id=\"checkout-fullname\" type=\"text\" placeholder=\"Digite seu nome\" onInput={ handleName } />\n        </Form.Group>\n        <Form.Group className=\"mb-1\">\n          <Form.Label htmlFor=\"checkout-birth\">Data de nascimento: </Form.Label>\n          <Form.Control id=\"checkout-birth\" type=\"text\" placeholder=\"Ex.: 01/01/2001\" onInput={ handleBirthDate }/>\n        </Form.Group>\n        <Form.Group className=\"mb-1\">\n          <Form.Label htmlFor=\"checkout-cpf\">CPF/CNPJ</Form.Label>\n          <Form.Control id=\"checkout-cpf\" type=\"text\" placeholder=\"Digite seu CPF ou CNPJ\" onInput={ handleDocument }/>\n        </Form.Group>\n        <div \n          className=\"status-container\"\n          onChange={ handleEntity }\n        >\n          {/* <span>status:&nbsp;</span> */}\n          <label htmlFor=\"radio-ativo\" >\n            <input id=\"radio-ativo\" type=\"radio\" value=\"pessoa fisica\" name=\"entity\"/>\n            &nbsp;&nbsp;Pessoa física\n          </label>\n          <label>\n            <input type=\"radio\" value=\"pessoa juridica\" name=\"entity\" />\n            &nbsp;&nbsp;Pessoa Jurídica\n          </label>\n        </div>\n        <Button\n          // type=\"submit\"\n          variant='success'\n          onClick={ submit }>\n          Adicionar usuario\n        </Button>\n        {/* <Form.Group className=\"mb-1\">\n          <Form.Label htmlFor=\"checkout-phone-number\">Telefone</Form.Label>\n          <Form.Control id=\"checkout-phone-number\" type=\"text\" placeholder=\"Digite um telefone para contato\"/>\n        </Form.Group>\n        <Form.Group className=\"mb-1\">\n          <Form.Label htmlFor=\"checkout-address\">Endereço: </Form.Label>\n          <Form.Control id=\"checkout-address\" type=\"text\" placeholder=\"Endereço\"/>\n        </Form.Group>\n        <Form.Group className=\"mb-1\">\n          <Form.Label htmlFor=\"checkout-district\">Bairro: </Form.Label>\n          <Form.Control id=\"checkout-district\" type=\"text\" placeholder=\"Bairro\"/>\n        </Form.Group>\n        <Row className=\"mb-3\">\n          <Form.Group className=\"mb-1\">\n            <Form.Label htmlFor=\"checkout-city\">Cidade: </Form.Label>\n            <Form.Control id=\"checkout-city\" type=\"text\" placeholder=\"Cidade\"/>\n          </Form.Group>\n          <Form.Group className=\"mb-1\">\n            <Form.Label htmlFor=\"checkout-state\">Estado: </Form.Label>\n            <Form.Control id=\"checkout-state\" type=\"text\" placeholder=\"Estado\"/>\n          </Form.Group>\n          <Form.Group className=\"mb-1\">\n            <Form.Label htmlFor=\"checkout-cpf\">CEP</Form.Label>\n            <Form.Control id=\"checkout-cpf\" type=\"text\" placeholder=\"Ex.: 12345000\"/>\n          </Form.Group>\n        </Row> */}\n      </Form>\n  )\n}\n\nexport default NewClient;","/home/johne/MyGitHub/cadastro_de_clients_react/src/services/Post.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":17,"column":6,"nodeType":"55","endLine":17,"endColumn":8,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":2,"column":16,"nodeType":"59","messageId":"60","endLine":2,"endColumn":19},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clientId'. Either include it or remove the dependency array.","ArrayExpression",["63"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},"Update the dependencies array to be: [clientId]",{"range":"66","text":"67"},[680,682],"[clientId]"]