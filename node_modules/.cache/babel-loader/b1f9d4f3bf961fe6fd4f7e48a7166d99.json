{"ast":null,"code":"var _jsxFileName = \"/home/johne/MyGitHub/cadastro_de_clients_react/src/Pages/ClientHome.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { fetchGetClients } from '../services/fetchClients';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ClientHome() {\n  _s();\n\n  const [clients, setClients] = useState([]);\n  useEffect(() => {\n    fetchGetClients().then(response => setClients(response).filter(({\n      clientId\n    }) => clientId === Number(1)));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pagina do Cliente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClientHome, \"cUQn5teewQOIEjPDAOj81V47VgI=\");\n\n_c = ClientHome;\nexport default ClientHome;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientHome\");","map":{"version":3,"sources":["/home/johne/MyGitHub/cadastro_de_clients_react/src/Pages/ClientHome.js"],"names":["React","useEffect","useState","fetchGetClients","ClientHome","clients","setClients","then","response","filter","clientId","Number"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,0BAAhC;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,eAAe,GAAGI,IAAlB,CAAwBC,QAAD,IAAcF,UAAU,CAACE,QAAD,CAAV,CAAqBC,MAArB,CAA4B,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAkBA,QAAQ,KAAKC,MAAM,CAAC,CAAD,CAAjE,CAArC;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAZQP,U;;KAAAA,U;AAcT,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchGetClients } from '../services/fetchClients';\n\nfunction ClientHome() {\n  const [clients, setClients] = useState([])\n\n  useEffect(() => {\n    fetchGetClients().then((response) => setClients(response).filter(({ clientId }) => clientId === Number(1)))\n  }, []);\n\n  return (\n    <div>\n      <h1>Pagina do Cliente</h1>\n    </div>\n  )\n}\n\nexport default ClientHome\n"]},"metadata":{},"sourceType":"module"}